import { attributeToCamelCase, pascalCase, propertyToCamelCase } from './_case.js'
import { Data } from '../parser.js'
import { renderTag, renderPropsInterface, hasChildren } from './_common.js'

function renderFunction(data: Data): string {
  const args = [
    ...Object.keys(data.attributes).map(attributeToCamelCase),
    ...Array.from(data.booleanAttributes).map(attributeToCamelCase),
    ...Array.from(data.properties).map(propertyToCamelCase),
    '...props',
  ].join(', ')

  return `/**
* ${data.comment}
*/
export function ${pascalCase(data.className)}({ ${args} }: Props${hasChildren(data.tag) ? ', { slots }: SetupContext' : ''}) {
  return (${renderTag(data, '{slots.default?.()}', 'class')})
}`
}

// https://docs.astro.build/en/guides/typescript/
export function render(filename: string, data: Data): string {
  return `---
// Generated by MistCSS, do not modify
import './${filename}.mist.css'

${hasChildren(data.tag) ? "import type { SetupContext } from 'vue'" : ''}
import type { JSX } from 'vue/jsx-runtime'

${renderPropsInterface(data, `JSX.IntrinsicElements['${data.tag}']`)}

${renderFunction(data)}
`
}
